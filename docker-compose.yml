services:
  web:
    build: ./web
    command: >
      sh -c "/wait-for-it.sh postgres:5432 -- 
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 core.wsgi:application"
    volumes:
      - ./webapp:/code
      - static_volume:/code/static
    env_file:
      - ./web/.env
    depends_on:
      - postgres
    networks:
      - backend

  bot:
    build: ./bot
    env_file:
      - ./bot/.env
    volumes:
      - ./bot:/code
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:latest
    env_file:
      - ./web/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/code/static
      # - certbot_www:/var/www/certbot
      # - certbot_conf:/etc/
      - ./certbot/www:/var/www/certbot  # Для веб-рута Certbot
      - ./certbot/conf:/etc/letsencrypt 
      - /etc/letsencrypt/live/glasshalf.ru/fullchain.pem:/etc/letsencrypt/live/glasshalf.ru/fullchain.pem:ro
      - /etc/letsencrypt/live/glasshalf.ru/privkey.pem:/etc/letsencrypt/live/glasshalf.ru/privkey.pem:ro
    depends_on:
      - web
    networks:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot  # Для веб-рута Certbot
      - ./certbot/conf:/etc/letsencrypt 
    command: certonly --non-interactive --agree-tos --email two-potato@yandex.ru --webroot -w /var/www/certbot -d glasshalf.ru
    depends_on:
      - nginx
    networks:
      - backend

volumes:
  postgres_data:
  static_volume:
  # certbot_www:
  # certbot_conf:

networks:
  backend:
    driver: bridge
